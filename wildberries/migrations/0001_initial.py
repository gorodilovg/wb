# Generated by Django 2.2 on 2021-05-01 09:25

from decimal import Decimal
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import wildberries.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, db_index=True, default='', editable=False, max_length=256, verbose_name='идентификатор')),
                ('created_at', models.DateTimeField(null=True, verbose_name='дата и время')),
                ('updated_at', models.DateTimeField(null=True, verbose_name='дата и время обновления')),
                ('in_process_at', models.DateTimeField(null=True, verbose_name='принят в обработку')),
                ('number', models.CharField(db_index=True, default='', max_length=64, verbose_name='номер')),
                ('posting_type', models.CharField(choices=[('ozon_fbo', 'Ozon FBO'), ('ozon_fbs', 'Ozon FBS'), ('wildberries_fbs', 'Wildberries FBS')], default='', max_length=32, verbose_name='тип отправления')),
                ('posting_number', models.CharField(db_index=True, default='', max_length=64, verbose_name='номер отправления')),
                ('status', models.CharField(choices=[('no_information', 'Информация о статусе отсутствует'), ('awaiting_approve', 'Ожидает подтверждения'), ('awaiting_packaging', 'Ожидает упаковки'), ('awaiting_deliver', 'Ожидает отгрузки'), ('delivering', 'Доставляется'), ('delivered', 'Доставлено'), ('cancelled', 'Аннулировано'), ('not_accepted', 'Не принят в сортировочном центре')], default='', max_length=32, verbose_name='статус')),
                ('fixed_expenses_of_store', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='фиксированные расходы магазина')),
                ('other_expenses_of_store', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='прочие расходы магазина')),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(default=wildberries.models.raw_data_default)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, db_index=True, default='', editable=False, max_length=256, verbose_name='идентификатор')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, db_index=True, default='', max_length=128, verbose_name='артикул')),
                ('name', models.CharField(default='', max_length=256, verbose_name='имя')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='цена')),
                ('description', models.TextField(blank=True, default='', verbose_name='описание')),
                ('status', models.CharField(blank=True, choices=[('processing', 'Информация о товаре добавляется в систему'), ('moderating', 'Товар проходит модерацию'), ('processed', 'Информация обновлена'), ('failed_moderation', 'Товар не прошел модерацию'), ('failed_validation', 'Товар не прошел валидацию'), ('failed', 'Возникла ошибка'), ('archived', 'Архивировано')], default='', max_length=32)),
                ('ozon_fbs_sku', models.CharField(blank=True, default='', max_length=128)),
                ('ozon_fbo_sku', models.CharField(blank=True, default='', max_length=128)),
                ('ozon_product_id', models.PositiveIntegerField(blank=True, default=0)),
                ('ozon_category_id', models.PositiveIntegerField(blank=True, default=0)),
                ('wildberries_fbs_sku', models.IntegerField(blank=True, default=0)),
                ('wildberries_product_id', models.CharField(blank=True, default='', max_length=128)),
                ('wildberries_category_id', models.PositiveIntegerField(blank=True, default=0)),
                ('wildberries_character_id', models.IntegerField(blank=True, default=0, verbose_name='chrt_id')),
                ('raw_data', django.contrib.postgres.fields.jsonb.JSONField(default=wildberries.models.raw_data_default)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(blank=True, db_index=True, default='', editable=False, max_length=256, verbose_name='идентификатор')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('disabled_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(default='', max_length=256, verbose_name='name')),
                ('opening_date', models.DateField(null=True, verbose_name='дата открытия')),
                ('last_download_products', models.DateTimeField(blank=True, null=True)),
                ('last_download_ozon_fbo_postings', models.DateTimeField(blank=True, null=True)),
                ('last_download_ozon_fbs_postings', models.DateTimeField(blank=True, null=True)),
                ('last_update_ozon_orders', models.DateTimeField(blank=True, null=True)),
                ('disabled_reason', models.CharField(blank=True, choices=[('connect_failed_ozon_api', 'Не удалось подключится к Ozon Seller API. Проверьте Client ID и API Key.')], default='', max_length=256, verbose_name='причина отключения')),
            ],
            options={
                'verbose_name': 'магазин',
                'verbose_name_plural': 'магазины',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProductCardImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_file_url', models.CharField(blank=True, default='', max_length=256)),
                ('product_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='wildberries.ProductCard')),
            ],
        ),
        migrations.AddField(
            model_name='productcard',
            name='image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wildberries.ProductCardImage'),
        ),
        migrations.AddField(
            model_name='productcard',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_cards', to='wildberries.Store'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(null=True, verbose_name='дата и время обновления')),
                ('quantity', models.IntegerField(default=0, verbose_name='количество')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='цена')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=4, default=None, max_digits=12, null=True, verbose_name='закупочная цена')),
                ('product_total_cost', models.DecimalField(blank=True, decimal_places=4, default=None, max_digits=12, null=True, verbose_name='себестоимость товара')),
                ('product_reject_rate', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='процент брака')),
                ('product_return_rate', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=5, null=True, verbose_name='процент возврата товара')),
                ('packing_cost', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='стоимость упаковки')),
                ('delivery_cost', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='стоимость доставки')),
                ('return_cost', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='стоимость возврата')),
                ('commission', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True, verbose_name='комиссия')),
                ('ozon_fbs_sku', models.CharField(blank=True, default='', max_length=128)),
                ('ozon_fbo_sku', models.CharField(blank=True, default='', max_length=128)),
                ('wildberries_fbs_sku', models.IntegerField(blank=True, default=0)),
                ('wildberries_character_id', models.IntegerField(blank=True, default=0, verbose_name='chrt_id')),
                ('raw_product_data', django.contrib.postgres.fields.jsonb.JSONField(default=wildberries.models.raw_data_default)),
                ('raw_financial_data', django.contrib.postgres.fields.jsonb.JSONField(default=wildberries.models.raw_data_default)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wildberries.Order')),
                ('product_card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='wildberries.ProductCard')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='wildberries.Store'),
        ),
        migrations.AddIndex(
            model_name='productcardimage',
            index=models.Index(fields=['remote_file_url'], name='wildberries_remote__1c9c3b_idx'),
        ),
    ]
